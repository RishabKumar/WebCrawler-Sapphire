/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import crawler.Crawler;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.concurrent.Callable;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import javax.swing.JFrame;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import link.Link;

/**
 *
 * @author in8RisKu
 */
public class ControlDesk extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form ControlDesk
     */
    Future<Boolean> parsingExecutor = null;
    JPopupMenu popup = null;
    JMenuItem clearMenu, filterbyMenu;
    
    public ControlDesk() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        urlTextField = new javax.swing.JTextField();
        filterTextField = new javax.swing.JTextField();
        ignoreTextField = new javax.swing.JTextField();
        crawlerButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable()
        {
            int statusCol = 1;
            public Component prepareRenderer(TableCellRenderer renderer, int row, int col) {
                Component comp = super.prepareRenderer(renderer, row, col);
                Object obj = (Object)getModel().getValueAt(row, statusCol);
                if(obj == null)
                {
                    return comp;
                }
                Integer value = (Integer)obj;
                if(value.intValue() > 200 && value.intValue() < 400)
                {
                    comp.setBackground(Color.YELLOW);
                    comp.setForeground(Color.BLACK);

                }
                else if(value.intValue() > 399)
                {
                    comp.setBackground(Color.RED);
                    comp.setForeground(Color.WHITE);
                }

                else
                {
                    if(row % 2 == 0)
                    {
                        comp.setBackground(Color.WHITE);
                        comp.setForeground(Color.BLACK);
                    }
                    else
                    {
                        comp.setBackground(new Color(240, 240, 240));
                        comp.setForeground(Color.BLACK);
                    }
                }
                return comp;//renderer.getTableCellRendererComponent(this, obj, false, false, row, col);
            }
        }
        ;

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Url");

        jLabel2.setText("Filter");

        jLabel3.setText("ignore");

        urlTextField.setText("http://www.lego.com/en-us/");
        urlTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                urlTextFieldActionPerformed(evt);
            }
        });

        filterTextField.setText("http://www.lego.com/en-us/");
        filterTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterTextFieldActionPerformed(evt);
            }
        });

        ignoreTextField.setText("http://cache.lego.com/");
        ignoreTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ignoreTextFieldActionPerformed(evt);
            }
        });

        crawlerButton.setText("Crawl");

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ignoreTextField)
                    .addComponent(urlTextField)
                    .addComponent(filterTextField))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(crawlerButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addGap(80, 80, 80))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(crawlerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(jLabel1))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(urlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(filterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ignoreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {}
            },
            new String [] {
                "Serial", "Status Code", "Link", "Parent Link"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 916, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void urlTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urlTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_urlTextFieldActionPerformed

    private void filterTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterTextFieldActionPerformed

    private void ignoreTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ignoreTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ignoreTextFieldActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        jTable1.setModel(new javax.swing.table.DefaultTableModel (
        new Object [][] {{}},new String [] { "Serial", "Status Code", "Link", "Parent Link"}));
        jTable1.updateUI();
    }//GEN-LAST:event_clearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    private Crawler obj;
    
    public ControlDesk(Crawler obj) 
    {
        this.obj = obj;
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControlDesk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControlDesk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControlDesk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControlDesk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                initComponents(); 
    //            DefaultTableModel dtm = ((DefaultTableModel )ControlDesk.this.jTable1.getModel());
                
//                        jTable1.setDefaultRenderer(Object.class,new CustomTableCellRender());
                   
                ControlDesk.this.setVisible(true);
                ControlDesk.this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                crawlerButton.addActionListener(ControlDesk.this);
                
                 popup = new JPopupMenu();
                filterbyMenu  = new JMenuItem("Filter by");
                filterbyMenu.addActionListener(new ActionListener() {

                    @Override
                    public void actionPerformed(ActionEvent e) {

                    }
                });
                popup.add(filterbyMenu);
                jTable1.setComponentPopupMenu(popup);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JButton crawlerButton;
    private javax.swing.JTextField filterTextField;
    private javax.swing.JTextField ignoreTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField urlTextField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent ae) 
    {
        if(ae.getActionCommand().equals("Crawl"))
        {
            obj = new Crawler(urlTextField.getText(), filterTextField.getText(), ignoreTextField.getText());
            crawlerButton.setText("Stop");
            obj.isCancelled = false;
            clearButton.setEnabled(false);
            doParsing();
        }
        else
        {
            parsingExecutor.cancel(true);
            obj.isCancelled = true;
            crawlerButton.setText("Crawl");
            clearButton.setEnabled(true);
        }
    }
    
    public void doParsing()
    {
        
        Callable updateUI = new Callable<Boolean>()
        {
            @Override
            public Boolean call() throws Exception 
            {
                obj.parse();
                JOptionPane.showMessageDialog(ControlDesk.this, "Crawling completed");
                return true;
            }
        };
        
        parsingExecutor = Executors.newFixedThreadPool(1).submit(updateUI);
        new Thread()
        {
            public void run()
            {
                //boolean flag = true;
                while(!parsingExecutor.isDone() && !parsingExecutor.isCancelled())
                {
                    SwingUtilities.invokeLater(() -> {
                        ArrayList<Link> urlList =  obj.getUrlList();
                        
                        for(Link link:urlList)
                        {
                            DefaultTableModel dtm = ((DefaultTableModel )ControlDesk.this.jTable1.getModel());
                            int statusCode = link.getStatusCode();
                            int serial = dtm.getRowCount();
                            dtm.addRow(new Object[]{serial,statusCode,link.getLink(),link.getParentLink()});  //"ABC", jTable1.getRowCount()-1, 0);
 
                        }
                        //         logTextArea.append(s);
                        
                    //    ControlDesk.this.jTable1.updateUI();
                        //         ControlDesk.this.jScrollPane1.updateUI();
                        ControlDesk.this.jScrollPane2.updateUI();
                    });
                    try
                    {
                        Thread.sleep(800);
                    }
                    catch(Exception e)
                    {
                        e.printStackTrace();
                    }
                }
            }
        }.start();
    }
    
    
    /*/
    private class CustomTableCellRender extends DefaultTableCellRenderer
    {
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col)
        {


            Component renderer = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, col);
            String status = (String)value;
            if(status != null && status.length() > 0 && Integer.parseInt(status) > 199)
            {
                renderer.setBackground(Color.yellow);
                renderer.setBackground(Color.red);

            }
            else
            {
                renderer.setBackground(table.getBackground());
                renderer.setForeground(table.getForeground());
            }
            return renderer;
        }
    }
    /*/
    
}
